variables:
  GET_SOURCES_ATTEMPTS: "3"
  GIT_DEPTH: "0"

default:
  before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update -yq && apt-get install -y curl lsb-release file
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - echo Using ROS_DISTRO $ROS_DISTRO
  - echo "deb http://apt.roboception.de/stable $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-stable.list
  - if [ "$TESTING_DEBS" = "true" ]; then echo "deb http://apt.roboception.de/testing $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-testing.list ; fi
  - curl http://apt.roboception.de/archive.key | apt-key add -
  - apt-get update -yq
  - apt-get install -y ros-${ROS_DISTRO}-rc-common-msgs
  - rosdep install --from-paths . --ignore-src -r -y
  - export CMAKE_PREFIX_PATH="/opt/ros/$ROS_DISTRO"

stages:
  - build
  - test_clients
  - upload

#########################
# Templates using anchors
#########################
.amd64_dashing_t: &amd64_dashing_job
  image: ros:dashing-ros-base-bionic
  tags:
    - amd64
    - docker

.armhf_dashing_t: &armhf_dashing_job
  image: ros:dashing-ros-base-bionic
  tags:
    - armhf
    - docker

.amd64_eloquent_t: &amd64_eloquent_job
  image: ros:eloquent-ros-base-bionic
  tags:
    - amd64
    - docker

#############
# Templates
#############
.build_msgs:
  stage: build
  script:
    - cd rc_reason_msgs
    - mkdir build && cd build
    - cmake -DCMAKE_INSTALL_PREFIX="/opt/ros/$ROS_DISTRO" -DCMAKE_BUILD_TYPE=Release ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test
    - make package
  artifacts:
    paths:
      - rc_reason_msgs/build/*.deb
    expire_in: 30 days

.build_msgs_testing:
  extends:
    - .build_msgs
  variables:
    TESTING_DEBS: "true"

.test_clients:
  stage: test_clients
  script:
    - dpkg -i rc_reason_msgs/build/*.deb
    - cd rc_reason_clients
    - python3 -m pytest --junitxml=junit_report.xml --log-cli-level=INFO -s
  artifacts:
    paths:
      - rc_reason_clients/junit_report.xml
    reports:
      junit: rc_reason_clients/junit_report.xml

.upload_deb:
  stage: upload
  image: registry.roboception.de/tools/docker_images:bionic-buildimage
  before_script:
     - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  script:
    - if [ -z "$APT_REPO" ]; then export APT_REPO=testing; fi
    - DEBS=$(find . -maxdepth 3 -name "*~${DISTRO_CODENAME}_*.deb")
    - upload_deb.sh $DISTRO_CODENAME-$APT_REPO $DEBS

.upload_deb_testing:
  extends:
    - .upload_deb
  variables:
    APT_REPO: "testing"
  only:
    - master
  except:
    - tags

.upload_deb_stable:
  extends:
    - .upload_deb
  variables:
    APT_REPO: "stable"
  only:
    - /^v?[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches

##############
#### Jobs ####
##############

# Test (on every commit)
########################
msgs:dashing:amd64:
  <<: *amd64_dashing_job
  extends: .build_msgs_testing

msgs:dashing:armhf:
  <<: *armhf_dashing_job
  extends: .build_msgs_testing

msgs:eloquent:amd64:
  <<: *amd64_eloquent_job
  extends: .build_msgs_testing

msgs_stable:dashing:amd64:
  <<: *amd64_dashing_job
  extends: .build_msgs

msgs_stable:dashing:armhf:
  <<: *armhf_dashing_job
  extends: .build_msgs

msgs_stable:eloquent:amd64:
  <<: *amd64_eloquent_job
  extends: .build_msgs

test:dashing:amd64:
  <<: *amd64_dashing_job
  extends: .test_clients
  dependencies:
    - msgs:dashing:amd64

test:dashing:armhf:
  <<: *armhf_dashing_job
  extends: .test_clients
  dependencies:
    - msgs:dashing:armhf

test:eloquent:amd64:
  <<: *amd64_eloquent_job
  extends: .test_clients
  dependencies:
    - msgs:eloquent:amd64

# upload packages for master and tags
#####################################
upload_testing:bionic:
  extends: .upload_deb_testing
  dependencies:
    - msgs:dashing:amd64
    - msgs:dashing:armhf
    - msgs:eloquent:amd64

upload_stable:bionic:
  extends: .upload_deb_stable
  dependencies:
    - msgs_stable:dashing:amd64
    - msgs_stable:dashing:armhf
    - msgs_stable:eloquent:amd64
